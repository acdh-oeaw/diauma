# Generated by Django 2.0.2 on 2018-02-13 13:31

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
#import maps.models
from maps.model.file import file_size, file_upload_path
from maps.model.scan import scan_size, scan_upload_path

class Migration(migrations.Migration):

    dependencies = [
        ('maps', '0003_auto_20171106_1248'),
    ]

    operations = [
        migrations.AlterField(
            model_name='file',
            name='file',
            field=models.FileField(upload_to=file_upload_path, validators=[file_size, django.core.validators.FileExtensionValidator(allowed_extensions=['jp2', 'jpeg', 'jpg', 'pdf', 'png', 'tif', 'tiff', 'zip'])]),
        ),
        migrations.AlterField(
            model_name='file',
            name='file_map',
            field=models.ManyToManyField(blank=True, related_name='file_map', to='maps.Map', verbose_name='maps'),
        ),
        migrations.AlterField(
            model_name='file',
            name='file_type',
            field=models.ManyToManyField(blank=True, related_name='file_type', to='maps.Type', verbose_name='types'),
        ),
        migrations.AlterField(
            model_name='institute',
            name='institute_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='institute_location', to='maps.Place', verbose_name='location'),
        ),
        migrations.AlterField(
            model_name='institute',
            name='institute_type',
            field=models.ManyToManyField(blank=True, related_name='institute_type', to='maps.Type', verbose_name='types'),
        ),
        migrations.AlterField(
            model_name='map',
            name='date_content',
            field=models.DateField(blank=True, null=True, verbose_name='content date'),
        ),
        migrations.AlterField(
            model_name='map',
            name='date_created',
            field=models.DateField(blank=True, null=True, verbose_name='creation date'),
        ),
        migrations.AlterField(
            model_name='map',
            name='height',
            field=models.FloatField(blank=True, null=True, verbose_name='height (cm)'),
        ),
        migrations.AlterField(
            model_name='map',
            name='info',
            field=models.TextField(blank=True, verbose_name='info'),
        ),
        migrations.AlterField(
            model_name='map',
            name='map_base',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='base', to='maps.Map', verbose_name='has base map'),
        ),
        migrations.AlterField(
            model_name='map',
            name='map_copy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='copy', to='maps.Map', verbose_name='is copy of'),
        ),
        migrations.AlterField(
            model_name='map',
            name='map_institute',
            field=models.ManyToManyField(blank=True, related_name='publisher', to='maps.Institute', verbose_name='published by'),
        ),
        migrations.AlterField(
            model_name='map',
            name='map_issued',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issued', to='maps.Place', verbose_name='issued at'),
        ),
        migrations.AlterField(
            model_name='map',
            name='map_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='map_location', to='maps.Place', verbose_name='has current location'),
        ),
        migrations.AlterField(
            model_name='map',
            name='map_persons',
            field=models.ManyToManyField(blank=True, related_name='author', to='maps.Person', verbose_name='created by'),
        ),
        migrations.AlterField(
            model_name='map',
            name='map_references',
            field=models.ManyToManyField(blank=True, related_name='reference', to='maps.Reference', verbose_name='referenced by'),
        ),
        migrations.AlterField(
            model_name='map',
            name='map_type',
            field=models.ManyToManyField(blank=True, related_name='map_type', to='maps.Type', verbose_name='types'),
        ),
        migrations.AlterField(
            model_name='map',
            name='scale',
            field=models.IntegerField(blank=True, null=True, verbose_name='scale (1:)'),
        ),
        migrations.AlterField(
            model_name='map',
            name='title',
            field=models.CharField(blank=True, max_length=255, verbose_name='title'),
        ),
        migrations.AlterField(
            model_name='map',
            name='width',
            field=models.FloatField(blank=True, null=True, verbose_name='width (cm)'),
        ),
        migrations.AlterField(
            model_name='person',
            name='date_begin',
            field=models.DateField(blank=True, null=True, verbose_name='begin'),
        ),
        migrations.AlterField(
            model_name='person',
            name='date_end',
            field=models.DateField(blank=True, null=True, verbose_name='end'),
        ),
        migrations.AlterField(
            model_name='person',
            name='person_institutes',
            field=models.ManyToManyField(blank=True, related_name='person_institutes', to='maps.Institute', verbose_name='institutes'),
        ),
        migrations.AlterField(
            model_name='person',
            name='person_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_location', to='maps.Place', verbose_name='location'),
        ),
        migrations.AlterField(
            model_name='person',
            name='person_type',
            field=models.ManyToManyField(blank=True, related_name='person_type', to='maps.Type', verbose_name='types'),
        ),
        migrations.AlterField(
            model_name='place',
            name='place_type',
            field=models.ManyToManyField(blank=True, related_name='place_type', to='maps.Type', verbose_name='types'),
        ),
        migrations.AlterField(
            model_name='reference',
            name='reference_type',
            field=models.ManyToManyField(blank=True, related_name='reference_type', to='maps.Type', verbose_name='types'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='file',
            field=models.ImageField(upload_to=scan_upload_path, validators=[scan_size, django.core.validators.FileExtensionValidator(allowed_extensions=['jp2', 'tif', 'tiff'])]),
        ),
        migrations.AlterField(
            model_name='scan',
            name='scan_map',
            field=models.ManyToManyField(blank=True, related_name='scan_map', to='maps.Map', verbose_name='maps'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='scan_person',
            field=models.ManyToManyField(blank=True, related_name='scan_creator', to='maps.Person', verbose_name='creator'),
        ),
        migrations.AlterField(
            model_name='scan',
            name='scan_type',
            field=models.ManyToManyField(blank=True, related_name='scan_type', to='maps.Type', verbose_name='types'),
        ),
    ]
